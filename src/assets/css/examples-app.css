html {
    font-family: sans-serif;
    font-size: 62.5%;
    font-display: swap;
    line-height: 1;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
    text-rendering: optimizeLegibility;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    box-sizing: border-box
}

html *, html :after, html :before {
    box-sizing: inherit
}

@-ms-viewport {
    width: device-width
}

@-o-viewport {
    width: device-width
}

@viewport {
    width: device-width
}

:root {
    -moz-tab-size: 2;
    -o-tab-size: 2;
    tab-size: 2
}

button, html, input, optgroup, select, textarea {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale
}

body {
    margin: 0
}

a {
    text-decoration: none;
    background: transparent
}

a:active, a:hover {
    outline: 0
}

[tabindex]:focus, a:focus {
    outline: none
}

h1, h2, h3, h4, h5, h6, li, ol, p, ul {
    margin: 0;
    padding: 0;
    font-weight: 400;
    font-style: normal
}

strong {
    font-weight: bolder
}

small {
    font-size: 80%
}

sub, sup {
    position: relative;
    font-size: 75%;
    line-height: 0;
    vertical-align: baseline
}

sup {
    top: -.5em
}

sub {
    bottom: -.25em
}

blockquote {
    margin: 0
}

abbr[title] {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
}

summary {
    display: list-item
}

ol, ul {
    list-style: none
}

nav ol, nav ul {
    list-style-image: none
}

li {
    list-style: none
}

[role=button], a, area, button, input, label, select, summary, textarea {
    touch-action: manipulation
}

img {
    max-width: 100%;
    height: auto;
    border: 0
}

img, svg {
    display: block;
    vertical-align: middle
}

figure {
    margin: 0
}

hr {
    box-sizing: content-box;
    height: 0
}

pre {
    margin-top: 0;
    margin-bottom: 0;
    overflow: auto
}

code, kbd, pre, samp {
    font-family: monospace;
    font-size: 1em
}

button, input, optgroup, select, textarea {
    margin: 0;
    padding: 0;
    font-family: inherit;
    line-height: 1;
    color: inherit
}

button {
    overflow: visible
}

button, select {
    text-transform: none
}

[role=button], button, input[type=button], input[type=reset], input[type=submit] {
    -webkit-appearance: button;
    cursor: pointer
}

button[disabled], input[disabled] {
    cursor: default
}

[type=button]::-moz-focus-inner, [type=reset]::-moz-focus-inner, [type=submit]::-moz-focus-inner, button::-moz-focus-inner {
    padding: 0;
    border-style: none
}

[type=button]:-moz-focusring, [type=reset]:-moz-focusring, [type=submit]:-moz-focusring, button:-moz-focusring {
    outline: .1rem dotted ButtonText
}

input {
    line-height: normal
}

input[type=checkbox], input[type=radio] {
    box-sizing: border-box;
    padding: 0
}

input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
    height: auto
}

input[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -.2rem
}

input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration {
    -webkit-appearance: none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit
}

fieldset {
    margin: 0;
    padding: 0;
    border: none
}

legend {
    border: 0;
    padding: 0
}

progress {
    vertical-align: baseline
}

textarea {
    overflow: auto
}

optgroup {
    font-weight: bolder
}

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    cursor: pointer
}

button, input, select, textarea {
    outline: none;
    background: none;
    border: none;
    border-radius: 0
}

[tabindex="-1"]:focus {
    outline: none !important
}

select:focus {
    outline: 0
}

button:focus, input, input:focus, input:invalid {
    box-shadow: none
}

::-webkit-input-placeholder {
    box-shadow: none
}

::-moz-placeholder {
    box-shadow: none;
    opacity: 1
}

:-ms-input-placeholder {
    box-shadow: none
}

table {
    border-collapse: collapse;
    border-spacing: 0
}

td, th {
    padding: 0
}

.flex-item-fix {
    min-width: 0;
    max-width: 100%
}

.visually-hidden {
    clip: rect(0 0 0 0);
    position: absolute;
    overflow: hidden;
    margin: -.1rem;
    padding: 0;
    width: .1rem;
    height: .1rem;
    border: 0
}

.clearfix:after {
    content: "";
    display: table;
    clear: both
}

.hidden {
    display: none !important
}

.text-truncate {
    display: block
}

.text-truncate, .text-truncate--inline-block {
    max-width: 100%;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden
}

.text-truncate--inline-block {
    display: "inline-block"
}

.text-no-select {
    pointer-events: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.text-center {
    text-align: center
}

.text-underline {
    text-decoration: underline
}

.text-nowrap {
    white-space: nowrap
}

.text-wrap {
    white-space: normal;
    word-wrap: break-word;
    word-break: break-word
}

.line-break--tablet-up {
    display: none
}

@media screen and (min-width: 480px) {
    .line-break--tablet-up {
        display: block
    }
}

html {
    font-family: -apple-system, BlinkMacSystemFont, San Francisco, Roboto, Segoe UI, Helvetica, Helvetica Neue, sans-serif
}

html[data-scroll-lock], html[data-scroll-lock] body {
    height: 100%
}

html[data-scroll-lock=true], html[data-scroll-lock=true] body {
    overflow: hidden;
    max-height: 100vh
}

html ::-moz-selection {
    color: #fff;
    background-color: #212529
}

html ::selection {
    color: #fff;
    background-color: #212529
}

body {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-auto.png), auto;
    position: relative;
    background-color: #fff
}

@media screen and (min-width: 960px) {
    body:after, body:before {
        content: "";
        position: -webkit-sticky;
        position: sticky;
        left: 0;
        display: block;
        width: 24rem;
        height: 0
    }

    body:before {
        top: 0;
        box-shadow: 0 -8rem 0 8rem #212529
    }

    body:after {
        bottom: 0;
        box-shadow: 0 8rem 0 8rem #212529
    }
}

.Heading, .Subheading, dd, li, p {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-text.png), text
}

a, button {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-pointer.png), pointer
}

a:active, button:active {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-pointer-clicked.png), pointer
}

.draggable--is-dragging, .draggable--is-dragging * {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-drag-clicked.png), auto
}

.preload-cursors {
    clip: rect(0 0 0 0);
    position: absolute;
    overflow: hidden;
    margin: -.1rem;
    padding: 0;
    width: .1rem;
    height: .1rem;
    border: 0
}

.preload-cursors b {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-drag-clicked.png), auto
}

.preload-cursors u {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-pointer-clicked.png), pointer
}

.preload-cursors a {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-rock-clicked.png), pointer
}

a.SvgContainer {
    display: block;
    color: #000
}

.SvgContainer .Svg {
    width: 100%;
    height: 100%;
    overflow: visible
}

.SvgContainer .Svg--heightAuto {
    height: auto
}

.Svg {
    fill: currentColor
}

.Link {
    color: #f1e2ff;
    transition: color .24s cubic-bezier(.64, 0, .35, 1)
}

.Link:focus, .Link:hover {
    color: #ca8cff
}

.Link:active {
    color: #753fa3
}

.Link--typeDark {
    color: #ca8cff
}

.Link--typeDark:focus, .Link--typeDark:hover {
    color: #ff0
}

.Link--typeDark:active {
    color: orange
}

.Link--typeUnderlined {
    display: inline-block;
    font-size: 1.6rem;
    font-weight: 700;
    color: #212529;
    text-decoration: underline;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
    -webkit-text-decoration-skip: ink;
    text-decoration-skip: ink
}

.Link--typeUnderlined:focus, .Link--typeUnderlined:hover {
    color: #0042ff
}

.Link--typeUnderlined:active {
    color: #0035cc
}

.Button, .Link--noWrap {
    white-space: nowrap
}

.Button {
    display: inline-block;
    padding: .8rem;
    font-size: 1.2rem;
    font-weight: 900;
    text-align: center;
    color: #212529;
    background-color: #fff;
    border: .4rem solid #212529;
    transition: color .24s cubic-bezier(.64, 0, .35, 1), background-color .24s cubic-bezier(.64, 0, .35, 1), border-color .24s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .Button {
        padding-right: 1.6rem;
        padding-left: 1.6rem;
        font-size: 1.6rem
    }
}

.Button:focus, .Button:hover {
    color: #0042ff;
    border-color: #0042ff
}

.Button:active {
    color: #0035cc;
    border-color: #0042ff
}

.Button:disabled {
    pointer-events: none;
    color: #ebeef0;
    border-color: #ebeef0
}

.ButtonContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin-top: -.8rem;
    margin-left: -.8rem
}

.ButtonContainer .Button {
    min-width: 0;
    max-width: 100%;
    display: block;
    flex: 0 0 auto;
    margin-top: .8rem;
    margin-left: .8rem
}

.Button--isActive {
    color: #fff;
    background-color: #212529
}

.Button--isActive:focus, .Button--isActive:hover {
    color: #fff;
    background-color: #0042ff;
    border-color: #0042ff
}

.Button--isActive:active {
    color: #fff;
    background-color: #0035cc;
    border-color: #0035cc
}

.Button--isActive:disabled {
    pointer-events: none;
    color: #fff;
    background-color: #ebeef0;
    border-color: #ebeef0
}

.Button--typePill {
    border-radius: 2.4rem
}

.Heading {
    color: currentColor
}

.Heading, .Subheading {
    letter-spacing: -.01em;
    line-height: 1.2
}

.Subheading {
    font-size: 2.2rem;
    font-weight: 600;
    color: #798c9c
}

@media screen and (min-width: 768px) {
    .Subheading {
        font-size: 2.8rem
    }
}

.Heading--sizeJumbo {
    font-size: 5.6rem;
    font-weight: 700;
    line-height: 1
}

@media screen and (min-width: 768px) {
    .Heading--sizeJumbo {
        font-size: 8.2rem
    }
}

@media screen and (min-width: 1440px) {
    .Heading--sizeJumbo {
        font-size: 12rem
    }
}

.Heading--size1 {
    margin-bottom: 2.4rem;
    font-size: 4.2rem;
    font-weight: 700
}

@media screen and (min-width: 768px) {
    .Heading--size1 {
        margin-bottom: 3.2rem;
        font-size: 6.4rem
    }
}

@media screen and (min-width: 1440px) {
    .Heading--size1 {
        font-size: 9rem
    }
}

.Heading--size2 {
    font-size: 3.2rem;
    font-weight: 700
}

@media screen and (min-width: 768px) {
    .Heading--size2 {
        font-size: 4.2rem
    }
}

@media screen and (min-width: 1440px) {
    .Heading--size2 {
        font-size: 6.4rem
    }
}

.Heading--size3 {
    font-size: 2.4rem;
    font-weight: 700
}

@media screen and (min-width: 768px) {
    .Heading--size3 {
        font-size: 2.8rem
    }
}

@media screen and (min-width: 1440px) {
    .Heading--size3 {
        font-size: 3.2rem
    }
}

.Heading--size4 {
    font-size: 2rem;
    font-weight: 700
}

@media screen and (min-width: 768px) {
    .Heading--size4 {
        font-size: 2.4rem
    }
}

@media screen and (min-width: 1440px) {
    .Heading--size4 {
        font-size: 2.8rem
    }
}

.Heading--colorWhite {
    color: #fff
}

@-webkit-keyframes placed {
    to {
        -webkit-transform: scale(0);
        transform: scale(0)
    }
}

@keyframes placed {
    to {
        -webkit-transform: scale(0);
        transform: scale(0)
    }
}

@-webkit-keyframes halftone {
    0% {
        background-position: 0 0, .6rem .6rem
    }
    to {
        background-position: .6rem .6rem, 1.2rem 1.2rem
    }
}

@keyframes halftone {
    0% {
        background-position: 0 0, .6rem .6rem
    }
    to {
        background-position: .6rem .6rem, 1.2rem 1.2rem
    }
}

:root {
    --pattern-bg-color: #fff
}

.Pattern {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto
}

.Pattern--typeStripes {
    background-image: repeating-linear-gradient(-45deg, var(--pattern-bg-color), var(--pattern-bg-color) 40%, currentColor 0, currentColor 50%, var(--pattern-bg-color) 0);
    background-size: .8rem .8rem
}

.Pattern--typeHalftone {
    background-image: radial-gradient(currentColor 24%, transparent 25%), radial-gradient(currentColor 24%, transparent 25%);
    background-position: 0 0, .6rem .6rem;
    background-size: 1.2rem 1.2rem;
    -webkit-animation: halftone .48s steps(3) infinite both paused;
    animation: halftone .48s steps(3) infinite both paused
}

.Pattern--typePlaced {
    background-color: #0042ff
}

.Main {
    padding: 9.6rem 2.4rem 4.8rem;
    min-height: 100vh;
    overflow: hidden;
    background-color: #fff
}

@media screen and (min-width: 960px) {
    .Main {
        padding-top: 4.8rem;
        padding-left: 34.4rem
    }
}

@media screen and (min-width: 1440px) {
    .Main {
        padding: 6.4rem 8rem 6.4rem 40rem
    }
}

.GridOverlay, .MainInterior {
    margin-left: auto;
    margin-right: auto;
    max-width: 144rem
}

.GridOverlay {
    --columns: 4;
    --repeating-width: calc(100% / var(--columns));
    --gutter-size: get-layout-length(gutter, mobile);
    --column-width: calc((100% / var(--columns)) - var(--gutter-size));
    --baseline-stop: calc(var(--gutter-size) - 0.1rem);
    --row-height: calc(4rem + var(--gutter-size));
    --bg-width: calc(100% + var(--gutter-size));
    --bg-baseline: repeating-linear-gradient(180deg, get-color(purple), get-color(purple) $ grid-overlay-baseline, transparent $ grid-overlay-baseline, transparent var(--baseline-stop), get-color(purple) var(--baseline-stop), get-color(purple) var(--gutter-size), transparent var(--gutter-size), transparent var(--row-height));
    --bg-columns: repeating-linear-gradient(90deg, get-color(purple, light), get-color(purple, light) var(--column-width), transparent var(--column-width), transparent var(--repeating-width));
    z-index: 1;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 2.4rem;
    right: 2.4rem;
    min-height: 100vh;
    background-image: var(--bg-baseline), var(--bg-columns);
    background-size: var(--bg-width) 100%;
    background-position: 0 calc(-1 * var(--gutter-size));
    mix-blend-mode: multiply;
    opacity: .8;
    pointer-events: none
}

@media screen and (min-width: 768px) {
    .GridOverlay {
        --columns: 6;
        --gutter-size: get-layout-length(gutter);
        --row-height: calc(4rem + var(--gutter-size))
    }
}

@media screen and (min-width: 1440px) {
    .GridOverlay {
        --columns: 8
    }
}

@media screen and (min-width: 960px) {
    .GridOverlay {
        left: 34.4rem
    }
}

@media screen and (min-width: 1440px) {
    .GridOverlay {
        right: 8rem;
        left: 40rem
    }
}

.GridOverlay--isHidden {
    display: none
}

.PageHeader {
    margin-left: auto;
    margin-right: auto;
    max-width: 64.2rem;
    margin-bottom: 4rem;
    text-align: center;
    color: #212529
}

@media screen and (min-width: 768px) {
    .PageHeader {
        margin-bottom: 5.6rem
    }
}

@media screen and (min-width: 1440px) {
    .PageHeader {
        margin-bottom: 8rem
    }
}

.PageHeader .Link {
    margin-top: 2.4rem
}

@media screen and (min-width: 1440px) {
    .PageHeader .Link {
        margin-top: 3.2rem
    }
}

.DragHandle {
    position: relative;
    width: 2rem;
    height: 2rem;
    background-color: currentColor
}

.DragHandle, .DragHandle:after, .DragHandle:before {
    transition: background-color .12s cubic-bezier(.64, 0, .35, 1)
}

.DragHandle:after, .DragHandle:before {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    display: block;
    height: .4rem;
    background-color: #fff
}

.DragHandle:before {
    top: .4rem
}

.DragHandle:after {
    bottom: .4rem
}

.NopeHandle {
    position: relative;
    width: 2rem;
    height: 2rem;
    border: .4rem solid currentColor;
    border-radius: 50%;
    transition: border-color .12s cubic-bezier(.64, 0, .35, 1)
}

.NopeHandle:before {
    content: "";
    position: absolute;
    top: .4rem;
    left: -.2rem;
    display: block;
    width: 1.6rem;
    height: .4rem;
    background-color: currentColor;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg)
}

.Sidebar {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    z-index: 5;
    background-color: #212529;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch
}

@media screen and (max-width: 959px) {
    .Sidebar {
        text-align: center;
        transition: opacity .24s cubic-bezier(.64, 0, .35, 1), visibility .24s cubic-bezier(.64, 0, .35, 1)
    }

    .Sidebar:before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        display: block;
        height: 9.6rem;
        background: linear-gradient(rgba(33, 37, 41, .9) 40%, rgba(33, 37, 41, 0))
    }

    .Sidebar[aria-hidden=undefined] {
        display: none
    }

    .Sidebar[aria-hidden=true] {
        opacity: 0;
        visibility: hidden;
        pointer-events: none
    }
}

@media screen and (min-width: 960px) {
    .Sidebar {
        position: fixed;
        right: auto;
        display: flex;
        flex-direction: column;
        width: 32rem
    }
}

.SidebarHeader {
    padding: 9.6rem 2.4rem 2.4rem
}

@media screen and (min-width: 960px) {
    .SidebarHeader {
        padding-top: 4.8rem
    }
}

@media screen and (min-width: 1440px) {
    .SidebarHeader {
        padding-top: 6.4rem;
        padding-right: 4rem;
        padding-left: 4rem
    }
}

.SidebarFooter {
    padding: 4rem 2.4rem
}

@media screen and (min-width: 1440px) {
    .SidebarFooter {
        padding: 6.4rem 4rem
    }
}

.LegalText {
    font-size: 1.2rem;
    font-weight: 600;
    line-height: 1.4;
    color: #fff
}

.LegalText + .LegalText {
    margin-top: 1.6rem
}

@media screen and (max-width: 959px) {
    .LegalText {
        margin-left: auto;
        margin-right: auto;
        max-width: 32rem
    }
}

.Navigation {
    padding: 2.4rem
}

@media screen and (min-width: 960px) {
    .Navigation {
        flex: 1
    }
}

@media screen and (min-width: 1440px) {
    .Navigation {
        padding-right: 4rem;
        padding-left: 4rem
    }
}

.NavList + .NavList {
    margin-top: 3.2rem
}

@media screen and (min-width: 960px) {
    .NavList + .NavList {
        margin-top: 4.8rem
    }
}

.NavItem + .NavItem {
    margin-top: 1.2rem
}

@media screen and (min-width: 960px) {
    .NavItem + .NavItem {
        margin-top: 1.6rem
    }
}

.NavHeading, .NavLink {
    font-size: 3.2rem;
    letter-spacing: -.1rem;
    line-height: .9
}

@media screen and (min-width: 960px) {
    .NavHeading, .NavLink {
        font-size: 2.4rem
    }
}

.NavHeading {
    font-weight: 700;
    color: #fff
}

.NavList--isCurrent .NavHeading {
    color: #ff0
}

.NavLink {
    font-weight: 600;
    color: #798c9c
}

.NavLink.NavLink--isCurrent {
    pointer-events: none;
    color: #ca8cff
}

.NavLink.NavLink--isDisabled {
    pointer-events: none;
    color: #798c9c
}

a.NavLink {
    color: #c3cfd8;
    transition: color .24s cubic-bezier(.64, 0, .35, 1)
}

a.NavLink:focus, a.NavLink:hover {
    color: #ca8cff
}

a.NavLink:active {
    color: #753fa3
}

@-webkit-keyframes FadeActivator {
    to {
        opacity: 1
    }
}

@keyframes FadeActivator {
    to {
        opacity: 1
    }
}

@-webkit-keyframes HamburgerBefore-In {
    0% {
        -webkit-transform: translateY(0) rotate(0);
        transform: translateY(0) rotate(0)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(.85rem) rotate(45deg);
        transform: translateY(.85rem) rotate(45deg)
    }
}

@keyframes HamburgerBefore-In {
    0% {
        -webkit-transform: translateY(0) rotate(0);
        transform: translateY(0) rotate(0)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(.85rem) rotate(45deg);
        transform: translateY(.85rem) rotate(45deg)
    }
}

@-webkit-keyframes HamburgerBefore-Out {
    0% {
        -webkit-transform: translateY(.85rem) rotate(45deg);
        transform: translateY(.85rem) rotate(45deg)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(0) rotate(0);
        transform: translateY(0) rotate(0)
    }
}

@keyframes HamburgerBefore-Out {
    0% {
        -webkit-transform: translateY(.85rem) rotate(45deg);
        transform: translateY(.85rem) rotate(45deg)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(0) rotate(0);
        transform: translateY(0) rotate(0)
    }
}

@-webkit-keyframes HamburgerAfter-In {
    0% {
        -webkit-transform: translateY(1.7rem) rotate(0);
        transform: translateY(1.7rem) rotate(0)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(.85rem) rotate(-45deg);
        transform: translateY(.85rem) rotate(-45deg)
    }
}

@keyframes HamburgerAfter-In {
    0% {
        -webkit-transform: translateY(1.7rem) rotate(0);
        transform: translateY(1.7rem) rotate(0)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(.85rem) rotate(-45deg);
        transform: translateY(.85rem) rotate(-45deg)
    }
}

@-webkit-keyframes HamburgerAfter-Out {
    0% {
        -webkit-transform: translateY(.85rem) rotate(-45deg);
        transform: translateY(.85rem) rotate(-45deg)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(1.7rem) rotate(0);
        transform: translateY(1.7rem) rotate(0)
    }
}

@keyframes HamburgerAfter-Out {
    0% {
        -webkit-transform: translateY(.85rem) rotate(-45deg);
        transform: translateY(.85rem) rotate(-45deg)
    }
    50% {
        -webkit-transform: translateY(.85rem) rotate(0);
        transform: translateY(.85rem) rotate(0)
    }
    to {
        -webkit-transform: translateY(1.7rem) rotate(0);
        transform: translateY(1.7rem) rotate(0)
    }
}

@-webkit-keyframes HamburgerPatty-In {
    0%, 25% {
        opacity: 1
    }
    50%, to {
        opacity: 0
    }
}

@keyframes HamburgerPatty-In {
    0%, 25% {
        opacity: 1
    }
    50%, to {
        opacity: 0
    }
}

@-webkit-keyframes HamburgerPatty-Out {
    0%, 25% {
        opacity: 0
    }
    50%, to {
        opacity: 1
    }
}

@keyframes HamburgerPatty-Out {
    0%, 25% {
        opacity: 0
    }
    50%, to {
        opacity: 1
    }
}

.Hamburger {
    z-index: 6;
    position: absolute;
    top: 3.2rem;
    left: 50%;
    margin-left: -2rem;
    padding: .8rem;
    opacity: 0;
    -webkit-animation: FadeActivator .48s cubic-bezier(.64, 0, .35, 1) forwards;
    animation: FadeActivator .48s cubic-bezier(.64, 0, .35, 1) forwards
}

@media only screen and (min-width: 960px) {
    .Hamburger {
        clip: rect(0 0 0 0);
        position: absolute;
        overflow: hidden;
        margin: -.1rem;
        padding: 0;
        width: .1rem;
        height: .1rem;
        border: 0
    }
}

.Hamburger[aria-expanded=true] .HamburgerBun:after, .Hamburger[aria-expanded=true] .HamburgerBun:before {
    background-color: #fff
}

.Hamburger[aria-expanded=true] .HamburgerBun:before {
    -webkit-animation-name: HamburgerBefore-In;
    animation-name: HamburgerBefore-In
}

.Hamburger[aria-expanded=true] .HamburgerBun:after {
    -webkit-animation-name: HamburgerAfter-In;
    animation-name: HamburgerAfter-In
}

.Hamburger[aria-expanded=true] .HamburgerPatty {
    -webkit-animation-name: HamburgerPatty-In;
    animation-name: HamburgerPatty-In
}

.HamburgerBun {
    position: relative;
    width: 2.4rem;
    height: 2rem
}

.HamburgerBun:after, .HamburgerBun:before {
    content: "";
    top: 0;
    display: block;
    transition: background-color .24s cubic-bezier(.64, 0, .35, 1)
}

.HamburgerBun .HamburgerPatty, .HamburgerBun:after, .HamburgerBun:before {
    position: absolute;
    left: 0;
    width: 100%;
    height: .3rem;
    border-radius: .3rem;
    background-color: #212529;
    -webkit-animation-duration: .24s;
    animation-duration: .24s;
    -webkit-animation-timing-function: cubic-bezier(.64, 0, .35, 1);
    animation-timing-function: cubic-bezier(.64, 0, .35, 1);
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both
}

.HamburgerBun:before {
    -webkit-transform: translateY(0) rotate(0);
    transform: translateY(0) rotate(0);
    -webkit-animation-name: HamburgerBefore-Out;
    animation-name: HamburgerBefore-Out
}

.HamburgerBun:after {
    -webkit-transform: translateY(1.7rem) rotate(0);
    transform: translateY(1.7rem) rotate(0);
    -webkit-animation-name: HamburgerAfter-Out;
    animation-name: HamburgerAfter-Out
}

.HamburgerPatty {
    top: .85rem;
    -webkit-animation-name: HamburgerPatty-Out;
    animation-name: HamburgerPatty-Out
}

@-webkit-keyframes logo-outline-bounce {
    25% {
        -webkit-transform: translate(-.1rem, .1rem);
        transform: translate(-.1rem, .1rem)
    }
    75% {
        -webkit-transform: translate(.1rem, -.1rem);
        transform: translate(.1rem, -.1rem)
    }
}

@keyframes logo-outline-bounce {
    25% {
        -webkit-transform: translate(-.1rem, .1rem);
        transform: translate(-.1rem, .1rem)
    }
    75% {
        -webkit-transform: translate(.1rem, -.1rem);
        transform: translate(.1rem, -.1rem)
    }
}

@-webkit-keyframes logo-rainbow-mask {
    0% {
        fill: #212529
    }
    25% {
        fill: purple
    }
    50% {
        fill: red
    }
    75% {
        fill: orange
    }
}

@keyframes logo-rainbow-mask {
    0% {
        fill: #212529
    }
    25% {
        fill: purple
    }
    50% {
        fill: red
    }
    75% {
        fill: orange
    }
}

@-webkit-keyframes logo-rainbow-purple {
    0% {
        fill: purple
    }
    25% {
        fill: red
    }
    50% {
        fill: orange
    }
    75% {
        fill: #212529
    }
}

@keyframes logo-rainbow-purple {
    0% {
        fill: purple
    }
    25% {
        fill: red
    }
    50% {
        fill: orange
    }
    75% {
        fill: #212529
    }
}

@-webkit-keyframes logo-rainbow-red {
    0% {
        fill: red
    }
    25% {
        fill: orange
    }
    50% {
        fill: #212529
    }
    75% {
        fill: purple
    }
}

@keyframes logo-rainbow-red {
    0% {
        fill: red
    }
    25% {
        fill: orange
    }
    50% {
        fill: #212529
    }
    75% {
        fill: purple
    }
}

@-webkit-keyframes logo-rainbow-orange {
    0% {
        fill: orange
    }
    25% {
        fill: #212529
    }
    50% {
        fill: purple
    }
    75% {
        fill: red
    }
}

@keyframes logo-rainbow-orange {
    0% {
        fill: orange
    }
    25% {
        fill: #212529
    }
    50% {
        fill: purple
    }
    75% {
        fill: red
    }
}

.Brand {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-rock.png), pointer;
    display: flex
}

.Brand:active {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-rock-clicked.png), pointer
}

@media screen and (max-width: 959px) {
    .Brand {
        justify-content: center
    }
}

@media screen and (min-width: 1440px) {
    .Brand {
        margin-left: -.8rem
    }
}

.BrandLogo {
    flex: 0 0 4.6rem
}

.BrandWordmark {
    flex: 0 0 17.6rem;
    margin-left: 1.6rem
}

.Svg--srcWordmark {
    fill: #ff0
}

.Wave--colorMask {
    fill: #212529
}

.Wave--colorPurple {
    fill: purple
}

.Wave--colorRed {
    fill: red
}

.Wave--colorOrange {
    fill: orange
}

.Hand {
    fill: #ff0
}

.Brand:hover .Wave--colorMask {
    -webkit-animation: logo-rainbow-mask .48s cubic-bezier(.64, 0, .35, 1) infinite;
    animation: logo-rainbow-mask .48s cubic-bezier(.64, 0, .35, 1) infinite
}

.Brand:hover .Wave--colorPurple {
    -webkit-animation: logo-rainbow-purple .48s cubic-bezier(.64, 0, .35, 1) infinite;
    animation: logo-rainbow-purple .48s cubic-bezier(.64, 0, .35, 1) infinite
}

.Brand:hover .Wave--colorRed {
    -webkit-animation: logo-rainbow-red .48s cubic-bezier(.64, 0, .35, 1) infinite;
    animation: logo-rainbow-red .48s cubic-bezier(.64, 0, .35, 1) infinite
}

.Brand:hover .Wave--colorOrange {
    -webkit-animation: logo-rainbow-orange .48s cubic-bezier(.64, 0, .35, 1) infinite;
    animation: logo-rainbow-orange .48s cubic-bezier(.64, 0, .35, 1) infinite
}

.Brand:hover .Hand {
    -webkit-animation: logo-outline-bounce .48s linear infinite;
    animation: logo-outline-bounce .48s linear infinite
}

.Brand:active .Hand, .Brand:active .Wave--colorMask, .Brand:active .Wave--colorOrange, .Brand:active .Wave--colorPurple, .Brand:active .Wave--colorRed {
    -webkit-animation-duration: .24s;
    animation-duration: .24s
}

.BlockWrapper .Block {
    height: 100%
}

.Block {
    position: relative;
    display: block
}

.BlockContent {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    position: relative;
    min-height: 8.6rem;
    height: 100%;
    color: #fff;
    background-color: #212529;
    border: .6rem solid #212529
}

@media screen and (min-width: 768px) {
    .BlockContent {
        min-height: 8.8rem;
        border-width: .8rem
    }
}

.BlockContent .Heading {
    margin-top: -.1em
}

.BlockLayout--typeFlex, .BlockLayout--typeFloat {
    margin-top: -.6rem;
    margin-left: -.6rem
}

.BlockLayout--typeFlex > .BlockWrapper, .BlockLayout--typeFloat > .BlockWrapper {
    margin-top: .6rem;
    margin-left: .6rem
}

.BlockLayout--typeFlex > .Block, .BlockLayout--typeFloat > .Block {
    padding-top: .6rem;
    padding-left: .6rem
}

@media screen and (min-width: 768px) {
    .BlockLayout--typeFlex, .BlockLayout--typeFloat {
        margin-top: -.8rem;
        margin-left: -.8rem
    }

    .BlockLayout--typeFlex > .BlockWrapper, .BlockLayout--typeFloat > .BlockWrapper {
        margin-top: .8rem;
        margin-left: .8rem
    }

    .BlockLayout--typeFlex > .Block, .BlockLayout--typeFloat > .Block {
        padding-top: .8rem;
        padding-left: .8rem
    }
}

.BlockLayout--typeFlex {
    display: flex;
    flex-wrap: wrap
}

.BlockLayout--typeFlex .Block {
    flex: 1 1 100%
}

.BlockLayout--typeFloat:after {
    content: "";
    display: table;
    clear: both
}

.BlockLayout--typeFloat .Block {
    float: left;
    width: 100%
}

.BlockLayout--typeGrid, .Snappable div > .BlockLayout--typeGrid--External, .Snappable div > .BlockLayout--typeGrid--TimeSlot {
    display: grid;
    grid-gap: .6rem
}

@media screen and (min-width: 768px) {
    .BlockLayout--typeGrid, .Snappable div > .BlockLayout--typeGrid--External, .Snappable div > .BlockLayout--typeGrid--TimeSlot {
        grid-gap: .8rem
    }
}

.BlockLayout--typePositioned {
    position: relative
}

.Block--typeShell .BlockContent {
    color: #212529;
    background-color: #fff;
    border-color: currentColor
}

.Block--typeHollow .BlockContent {
    color: #c3cfd8;
    background-color: #fff;
    border-color: currentColor
}

.Block--typeStripes .BlockContent {
    background-image: repeating-linear-gradient(-45deg, var(--pattern-bg-color), var(--pattern-bg-color) 40%, currentColor 0, currentColor 50%, var(--pattern-bg-color) 0);
    background-size: .8rem .8rem;
    color: #212529;
    border-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1)
}

.Block--isDraggable {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-drag.png), auto
}

.Block--isDraggable .BlockContent {
    color: #212529;
    background-color: #fff;
    border-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), -webkit-transform .24s cubic-bezier(.32, 1.46, .54, 1.28);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.32, 1.46, .54, 1.28);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.32, 1.46, .54, 1.28), -webkit-transform .24s cubic-bezier(.32, 1.46, .54, 1.28)
}

.Block--isDraggable.draggable-source--is-dragging .BlockContent, .Block--isDraggable:focus .BlockContent, .Block--isDraggable:hover .BlockContent {
    color: #0042ff
}

.Block--isDraggable.draggable-source--is-dragging .BlockContent .Pattern--typeHalftone {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation-play-state: running;
    animation-play-state: running
}

.Block--isDraggable.draggable-source--placed .BlockContent .Pattern--typePlaced {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation: placed .24s cubic-bezier(.64, 0, .35, 1) both;
    animation: placed .24s cubic-bezier(.64, 0, .35, 1) both
}

.Block--isDraggable.draggable-mirror {
    z-index: 7;
    transition: width .24s cubic-bezier(.32, 1.46, .54, 1.28), height .24s cubic-bezier(.32, 1.46, .54, 1.28)
}

.Block--isDraggable.draggable-mirror .BlockContent {
    height: 100%;
    color: #fff;
    background-color: #0042ff;
    border-color: #0042ff;
    -webkit-transform: scale(1.025);
    transform: scale(1.025)
}

.BlockWrapper {
    position: relative
}

.BlockWrapper.draggable-dropzone--occupied .Block--typeHollow, .BlockWrapper.draggable-dropzone--occupied .Block--typeStripes {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto
}

.Block--typeStripes.isColliding .BlockContent {
    color: red
}

.PaperStack {
    position: relative;
    margin-right: auto;
    margin-left: auto;
    width: 24rem;
    height: 33.2rem
}

@media screen and (min-width: 768px) {
    .PaperStack {
        width: 42rem;
        height: 52rem
    }
}

@media screen and (min-width: 1920px) {
    .PaperStack {
        width: 60rem;
        height: 70.8rem
    }
}

.PaperStackItem {
    position: absolute;
    left: 0;
    right: 0;
    height: 0
}

.PaperStackContent {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    position: relative;
    width: 100%;
    height: 38rem;
    color: #fff;
    background-color: #212529;
    border: .8rem solid #212529;
    border-top-width: 1.6rem;
    -webkit-transform: perspective(90rem) rotateX(60deg);
    transform: perspective(90rem) rotateX(60deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden
}

@media screen and (min-width: 768px) {
    .PaperStackContent {
        height: 58rem
    }
}

@media screen and (min-width: 1920px) {
    .PaperStackContent {
        height: 78rem
    }
}

.PaperStackHeading {
    margin-top: .5em;
    font-size: 7.2rem;
    font-weight: 700;
    line-height: 1
}

@media screen and (min-width: 768px) {
    .PaperStackHeading {
        font-size: 12rem
    }
}

@media screen and (min-width: 1920px) {
    .PaperStackHeading {
        font-size: 16rem
    }
}

.PaperStackItem:nth-child(1n+2) .PaperStackContent:after {
    content: "";
    position: absolute;
    right: -.8rem;
    bottom: 1.6rem;
    left: -.8rem;
    display: block;
    height: 3.2rem;
    background-color: #212529;
    transition: -webkit-transform .24s cubic-bezier(.64, 0, .35, 1);
    transition: transform .24s cubic-bezier(.64, 0, .35, 1);
    transition: transform .24s cubic-bezier(.64, 0, .35, 1), -webkit-transform .24s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .PaperStackItem:nth-child(1n+2) .PaperStackContent:after {
        bottom: 2rem;
        height: 4rem
    }
}

@media screen and (min-width: 1920px) {
    .PaperStackItem:nth-child(1n+2) .PaperStackContent:after {
        bottom: 1.6rem;
        height: 4.8rem
    }
}

.PaperStackItem:first-child {
    z-index: 4
}

.PaperStackItem:nth-child(2) {
    z-index: 3
}

.PaperStackItem:nth-child(3) {
    z-index: 2
}

.PaperStackItem:nth-child(4) {
    z-index: 1
}

.PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(2), .PaperStackItem:first-child {
    top: -7.6rem
}

.PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(3), .PaperStackItem:nth-child(2) {
    top: -4.4rem
}

.PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(4), .PaperStackItem:nth-child(3) {
    top: -1.2rem
}

.PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(5), .PaperStackItem:nth-child(4) {
    top: 2rem
}

@media screen and (min-width: 768px) {
    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(2), .PaperStackItem:first-child {
        top: -12.5rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(3), .PaperStackItem:nth-child(2) {
        top: -8.5rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(4), .PaperStackItem:nth-child(3) {
        top: -4.5rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(5), .PaperStackItem:nth-child(4) {
        top: -.5rem
    }
}

@media screen and (min-width: 1920px) {
    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(2), .PaperStackItem:first-child {
        top: -17.4rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(3), .PaperStackItem:nth-child(2) {
        top: -12.6rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(4), .PaperStackItem:nth-child(3) {
        top: -7.8rem
    }

    .PaperStackItem.draggable--original ~ .PaperStackItem:nth-child(5), .PaperStackItem:nth-child(4) {
        top: -3rem
    }
}

.draggable--original:first-child + .PaperStackItem .PaperStackContent:after {
    content: none
}

.PaperStackItem--isDraggable {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-drag.png), auto
}

.PaperStackItem--isDraggable .PaperStackContent {
    color: #212529;
    background-color: #fff;
    border-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), -webkit-transform .24s cubic-bezier(.64, 0, .35, 1);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.64, 0, .35, 1);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.64, 0, .35, 1), -webkit-transform .24s cubic-bezier(.64, 0, .35, 1)
}

.PaperStackItem--isDraggable:focus .PaperStackContent, .PaperStackItem--isDraggable:hover .PaperStackContent {
    color: #0042ff;
    -webkit-transform: perspective(90rem) rotateX(60deg) translateY(.8rem);
    transform: perspective(90rem) rotateX(60deg) translateY(.8rem)
}

.PaperStackItem--isDraggable:focus .PaperStackContent:after, .PaperStackItem--isDraggable:hover .PaperStackContent:after {
    -webkit-transform: translateY(-.8rem);
    transform: translateY(-.8rem)
}

.PaperStackItem--isDraggable.draggable-source--is-dragging .PaperStackContent {
    color: #0042ff
}

.PaperStackItem--isDraggable.draggable-source--is-dragging .PaperStackContent .Pattern--typeHalftone {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation-play-state: running;
    animation-play-state: running
}

.PaperStackItem--isDraggable.draggable-source--placed .PaperStackContent .Pattern--typePlaced {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation: placed .24s cubic-bezier(.64, 0, .35, 1) both;
    animation: placed .24s cubic-bezier(.64, 0, .35, 1) both
}

.PaperStackItem--isDraggable.draggable-mirror {
    z-index: 7
}

.PaperStackItem--isDraggable.draggable-mirror .PaperStackContent {
    color: #fff;
    background-color: #0042ff;
    border-color: #0042ff;
    -webkit-transform: perspective(90rem) rotateX(58deg) scale(1.025);
    transform: perspective(90rem) rotateX(58deg) scale(1.025)
}

.PaperStackItem--isDraggable.draggable-mirror .PaperStackContent:after {
    content: none
}

.PillSwitch {
    position: relative;
    margin-right: auto;
    margin-left: auto;
    width: 27.2rem;
    height: 27.2rem
}

@media screen and (min-width: 768px) {
    .PillSwitch {
        width: 54.8rem;
        height: 54.8rem
    }
}

.PillSwitchTrack {
    margin-top: -6.5rem;
    margin-left: -16.25rem;
    width: 32.5rem;
    height: 13rem;
    border-radius: 6.5rem;
    box-shadow: inset 0 0 0 .8rem #0042ff;
    position: absolute;
    top: 50%;
    left: 50%;
    color: #0042ff;
    background-color: #fff;
    -webkit-transform: rotate(-45deg);
    transform: rotate(-45deg);
    overflow: hidden
}

.PillSwitchTrack:after {
    content: "";
    position: absolute;
    top: -.8rem;
    right: -.8rem;
    bottom: -.8rem;
    left: -.8rem;
    display: block;
    background-color: #212529;
    transition: opacity .12s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .PillSwitchTrack {
        margin-top: -16rem;
        margin-left: -32rem;
        width: 64rem;
        height: 32rem;
        border-radius: 16rem;
        box-shadow: inset 0 0 0 1.6rem #0042ff
    }
}

.PillSwitchTrack .Pattern--typeHalftone {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation-play-state: running;
    animation-play-state: running;
    height: 27.2rem;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg)
}

@media screen and (min-width: 768px) {
    .PillSwitchTrack .Pattern--typeHalftone {
        height: 54.8rem
    }
}

.PillSwitchControl {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 13rem;
    height: 13rem;
    color: #212529;
    background-color: #fff;
    border: .8rem solid currentColor;
    border-radius: 50%;
    transition: color .12s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .PillSwitchControl {
        width: 32rem;
        height: 32rem;
        border-width: 1.6rem
    }
}

.PillSwitchControl .Heading {
    margin-top: -.1em;
    margin-left: -.05em
}

.PillSwitchControl.draggable-mirror, .PillSwitchControl:focus, .PillSwitchControl:hover {
    color: #0042ff
}

.PillSwitchControl:active {
    color: #0035cc
}

.PillSwitchControl.draggable-source--is-dragging {
    opacity: 0;
    visibility: hidden;
    pointer-events: none
}

.PillSwitch--isOn .PillSwitchTrack:after {
    opacity: 0
}

.PillSwitch--isOn .PillSwitchControl {
    top: 0;
    right: 0;
    bottom: auto;
    left: auto;
    color: #fff;
    background-color: #0042ff;
    border-color: #0042ff
}

.PillSwitch--isOn .PillSwitchControl.draggable-mirror, .PillSwitch--isOn .PillSwitchControl:focus, .PillSwitch--isOn .PillSwitchControl:hover {
    color: #0042ff;
    background-color: #fff
}

.PillSwitch--isOn .PillSwitchControl:active {
    color: #0035cc
}

@-webkit-keyframes plate-small {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.1, .96);
        transform: scale(1.1, .96)
    }
    25% {
        -webkit-transform: scale(.925, 1.075);
        transform: scale(.925, 1.075)
    }
    50% {
        -webkit-transform: scale(1.0125, .975);
        transform: scale(1.0125, .975)
    }
    75% {
        -webkit-transform: scale(.975, 1.0125);
        transform: scale(.975, 1.0125)
    }
    95% {
        -webkit-transform: scale(1.005, .995);
        transform: scale(1.005, .995)
    }
}

@keyframes plate-small {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.1, .96);
        transform: scale(1.1, .96)
    }
    25% {
        -webkit-transform: scale(.925, 1.075);
        transform: scale(.925, 1.075)
    }
    50% {
        -webkit-transform: scale(1.0125, .975);
        transform: scale(1.0125, .975)
    }
    75% {
        -webkit-transform: scale(.975, 1.0125);
        transform: scale(.975, 1.0125)
    }
    95% {
        -webkit-transform: scale(1.005, .995);
        transform: scale(1.005, .995)
    }
}

@-webkit-keyframes plate-medium {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.15, .95);
        transform: scale(1.15, .95)
    }
    25% {
        -webkit-transform: scale(.9, 1.1);
        transform: scale(.9, 1.1)
    }
    50% {
        -webkit-transform: scale(1.025, .96);
        transform: scale(1.025, .96)
    }
    75% {
        -webkit-transform: scale(.98, 1.025);
        transform: scale(.98, 1.025)
    }
    95% {
        -webkit-transform: scale(1.01, .985);
        transform: scale(1.01, .985)
    }
}

@keyframes plate-medium {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.15, .95);
        transform: scale(1.15, .95)
    }
    25% {
        -webkit-transform: scale(.9, 1.1);
        transform: scale(.9, 1.1)
    }
    50% {
        -webkit-transform: scale(1.025, .96);
        transform: scale(1.025, .96)
    }
    75% {
        -webkit-transform: scale(.98, 1.025);
        transform: scale(.98, 1.025)
    }
    95% {
        -webkit-transform: scale(1.01, .985);
        transform: scale(1.01, .985)
    }
}

@-webkit-keyframes plate-big {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.2, .9);
        transform: scale(1.2, .9)
    }
    25% {
        -webkit-transform: scale(.85, 1.15);
        transform: scale(.85, 1.15)
    }
    50% {
        -webkit-transform: scale(1.075, .95);
        transform: scale(1.075, .95)
    }
    75% {
        -webkit-transform: scale(.975, 1.05);
        transform: scale(.975, 1.05)
    }
    95% {
        -webkit-transform: scale(1.0125, .98);
        transform: scale(1.0125, .98)
    }
}

@keyframes plate-big {
    0%, to {
        -webkit-transform: scale(1);
        transform: scale(1)
    }
    10% {
        -webkit-transform: scale(1.2, .9);
        transform: scale(1.2, .9)
    }
    25% {
        -webkit-transform: scale(.85, 1.15);
        transform: scale(.85, 1.15)
    }
    50% {
        -webkit-transform: scale(1.075, .95);
        transform: scale(1.075, .95)
    }
    75% {
        -webkit-transform: scale(.975, 1.05);
        transform: scale(.975, 1.05)
    }
    95% {
        -webkit-transform: scale(1.0125, .98);
        transform: scale(1.0125, .98)
    }
}

@-webkit-keyframes plate-placed {
    0%, to {
        color: #212529
    }
    50% {
        color: #0042ff
    }
}

@keyframes plate-placed {
    0%, to {
        color: #212529
    }
    50% {
        color: #0042ff
    }
}

.PlateWrapper {
    margin-left: auto;
    margin-right: auto;
    max-width: 80rem;
    position: relative;
    padding-top: 100%;
    height: 0
}

@media screen and (min-width: 1280px) {
    .PlateWrapper {
        padding-top: 0;
        height: 80rem
    }
}

.Plate {
    height: 0;
    color: #fff;
    border-radius: 50%
}

.Plate, .PlateShadowWrapper {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto
}

.PlateShadowWrapper {
    pointer-events: none
}

.PlateShadow {
    width: 100%;
    height: 100%
}

.PlateShadow:before {
    content: "";
    display: block;
    width: 100%;
    height: 100%
}

.PlateContent, .PlateShadow:before {
    position: absolute;
    top: 0;
    left: 0;
    background-color: #212529;
    border-radius: 50%
}

.PlateContent {
    right: 0;
    bottom: 0;
    margin: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center
}

.PlateContent .Heading {
    margin-bottom: 0
}

.Plate--levelBottom {
    padding-top: 100%;
    width: 100%
}

.Plate--levelBottom .PlateShadow {
    -webkit-transform: rotate(55deg);
    transform: rotate(55deg)
}

.Plate--levelMiddle {
    padding-top: 75%;
    width: 75%
}

.Plate--levelMiddle .PlateShadow {
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg)
}

.Plate--levelTop {
    padding-top: 50%;
    width: 50%
}

.Plate--levelTop .PlateShadow {
    -webkit-transform: rotate(35deg);
    transform: rotate(35deg)
}

.PlateWrapper {
    --shadow-offset-x: 0;
    --shadow-offset-y: 0;
    --plate-scale-x: 1;
    --plate-scale-y: 1;
    --bottom-translate-x: 0;
    --bottom-translate-y: 0;
    --middle-translate-x: 0;
    --middle-translate-y: 0;
    --top-translate-x: 0;
    --top-translate-y: 0
}

.PlateWrapper.draggable-container--placed .Plate--levelBottom, .PlateWrapper.draggable-container--placed .Plate--levelMiddle, .PlateWrapper.draggable-container--placed .Plate--levelTop {
    -webkit-animation-name: plate-placed;
    animation-name: plate-placed;
    -webkit-animation-duration: .24s;
    animation-duration: .24s;
    -webkit-animation-timing-function: cubic-bezier(.64, 0, .35, 1);
    animation-timing-function: cubic-bezier(.64, 0, .35, 1)
}

.PlateWrapper.draggable-container--placed .Plate--levelBottom {
    -webkit-animation-delay: .12s;
    animation-delay: .12s
}

.PlateWrapper.draggable-container--placed .Plate--levelMiddle {
    -webkit-animation-delay: 60ms;
    animation-delay: 60ms
}

.Plate--isDraggable {
    color: #212529;
    transition: color .12s cubic-bezier(.64, 0, .35, 1)
}

.Plate--isDraggable:focus, .Plate--isDraggable:hover {
    color: #0042ff
}

.Plate--isDraggable .PlateShadowWrapper {
    -webkit-transform: translate3d(var(--shadow-offset-x), var(--shadow-offset-y), 0);
    transform: translate3d(var(--shadow-offset-x), var(--shadow-offset-y), 0)
}

.Plate--isDraggable .PlateShadow:before {
    background-color: currentColor
}

.Plate--isDraggable .PlateContent, .Plate--isDraggable .PlateShadow:before {
    -webkit-animation-duration: .48s;
    animation-duration: .48s;
    -webkit-animation-timing-function: cubic-bezier(.64, 0, .35, 1);
    animation-timing-function: cubic-bezier(.64, 0, .35, 1)
}

.Plate--isDraggable .PlateContent {
    background-color: #fff;
    border: 2.5vw solid currentColor
}

@media screen and (min-width: 960px) {
    .Plate--isDraggable .PlateContent {
        border-width: 1.6rem
    }
}

.Plate--isDraggable.Plate--levelBottom {
    -webkit-transform: translate3d(var(--bottom-translate-x), var(--bottom-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
    transform: translate3d(var(--bottom-translate-x), var(--bottom-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y))
}

.Plate--isDraggable.Plate--levelBottom:focus .PlateContent, .Plate--isDraggable.Plate--levelBottom:focus .PlateShadow:before, .Plate--isDraggable.Plate--levelBottom:hover .PlateContent, .Plate--isDraggable.Plate--levelBottom:hover .PlateShadow:before {
    -webkit-animation-name: plate-small;
    animation-name: plate-small
}

.Plate--isDraggable.Plate--levelMiddle {
    -webkit-transform: translate3d(var(--middle-translate-x), var(--middle-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
    transform: translate3d(var(--middle-translate-x), var(--middle-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y))
}

.Plate--isDraggable.Plate--levelMiddle:focus .PlateContent, .Plate--isDraggable.Plate--levelMiddle:focus .PlateShadow:before, .Plate--isDraggable.Plate--levelMiddle:hover .PlateContent, .Plate--isDraggable.Plate--levelMiddle:hover .PlateShadow:before {
    -webkit-animation-name: plate-medium;
    animation-name: plate-medium
}

.Plate--isDraggable.Plate--levelTop {
    -webkit-transform: translate3d(var(--top-translate-x), var(--top-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y));
    transform: translate3d(var(--top-translate-x), var(--top-translate-y), 0) scale(var(--plate-scale-x), var(--plate-scale-y))
}

.Plate--isDraggable.Plate--levelTop:focus .PlateContent, .Plate--isDraggable.Plate--levelTop:focus .PlateShadow:before, .Plate--isDraggable.Plate--levelTop:hover .PlateContent, .Plate--isDraggable.Plate--levelTop:hover .PlateShadow:before {
    -webkit-animation-name: plate-big;
    animation-name: plate-big
}

.Plate--isDraggable.draggable-mirror {
    display: none
}

.draggable-container--placed .Plate--levelBottom .PlateContent, .draggable-container--placed .Plate--levelBottom .PlateShadow:before {
    -webkit-animation-name: plate-small;
    animation-name: plate-small
}

.draggable-container--placed .Plate--levelMiddle .PlateContent, .draggable-container--placed .Plate--levelMiddle .PlateShadow:before {
    -webkit-animation-name: plate-medium;
    animation-name: plate-medium
}

.draggable-container--placed .Plate--levelTop .PlateContent, .draggable-container--placed .Plate--levelTop .PlateShadow:before {
    -webkit-animation-name: plate-big;
    animation-name: plate-big
}

.StackedListWrapper {
    background-image: repeating-linear-gradient(-45deg, var(--pattern-bg-color), var(--pattern-bg-color) 40%, currentColor 0, currentColor 50%, var(--pattern-bg-color) 0);
    background-size: .8rem .8rem;
    position: relative;
    color: #212529;
    box-shadow: inset 0 0 0 .6rem currentColor
}

@media screen and (min-width: 768px) {
    .StackedListWrapper {
        box-shadow: inset 0 0 0 .8rem currentColor
    }
}

.StackedListContent, .StackedListHeader {
    height: 7.2rem
}

@media screen and (min-width: 1440px) {
    .StackedListContent, .StackedListHeader {
        height: 8.6rem
    }
}

.StackedListHeader {
    padding: 2.2rem;
    background-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .StackedListHeader {
        padding: 2.4rem
    }
}

.StackedListHeader p {
    margin-top: .2em;
    font-size: 2rem;
    color: #fff
}

@media screen and (min-width: 768px) {
    .StackedListHeader p {
        font-size: 2.4rem
    }
}

@media screen and (min-width: 1440px) {
    .StackedListHeader p {
        font-size: 2.8rem
    }
}

.StackedList {
    position: relative;
    margin-top: -.6rem
}

@media screen and (min-width: 768px) {
    .StackedList {
        margin-top: -.8rem
    }
}

.StackedList:before {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    letter-spacing: -.01em;
    line-height: 1.2;
    color: currentColor;
    font-size: 2rem;
    font-weight: 700;
    pointer-events: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    content: "drop items here";
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    width: 80%;
    height: 80%;
    background-color: #fff;
    transition: opacity .24s cubic-bezier(.64, 0, .35, 1), visibility .24s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .StackedList:before {
        font-size: 2.4rem
    }
}

@media screen and (min-width: 1440px) {
    .StackedList:before {
        font-size: 2.8rem
    }
}

.StackedList:empty:before {
    opacity: 1;
    visibility: visible;
    pointer-events: auto
}

.StackedListItem {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-auto.png), auto
}

.StackedListItem:nth-child(1n+2) {
    margin-top: -.6rem
}

@media screen and (min-width: 768px) {
    .StackedListItem:nth-child(1n+2) {
        margin-top: -.8rem
    }
}

.draggable--original:first-child + .StackedListItem {
    margin-top: 0
}

.StackedListContent {
    position: relative;
    display: flex;
    align-items: center;
    padding: 1.6rem;
    color: currentColor;
    background-color: #fafbfc;
    border: .6rem solid currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), -webkit-transform .24s cubic-bezier(.32, 1.46, .54, 1.28);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.32, 1.46, .54, 1.28);
    transition: color .12s cubic-bezier(.64, 0, .35, 1), background-color .12s cubic-bezier(.64, 0, .35, 1), transform .24s cubic-bezier(.32, 1.46, .54, 1.28), -webkit-transform .24s cubic-bezier(.32, 1.46, .54, 1.28)
}

@media screen and (min-width: 768px) {
    .StackedListContent {
        border-width: .8rem
    }
}

.StackedListContent .Heading {
    flex: 1 1 auto
}

.StackedListContent .DragHandle, .StackedListContent .NopeHandle {
    flex: 0 0 2rem;
    margin-left: 2.4rem
}

.StackedListContent:before {
    content: "";
    position: absolute;
    top: -.6rem;
    right: -.6rem;
    left: -.6rem;
    display: block;
    height: .6rem;
    background-color: currentColor;
    opacity: 0;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), opacity .12s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .StackedListContent:before {
        top: -.8rem;
        right: -.8rem;
        left: -.8rem;
        height: .8rem
    }
}

.StackedListWrapper--sizeMedium .StackedListContent, .StackedListWrapper--sizeMedium .StackedListHeader {
    height: 10rem
}

@media screen and (min-width: 1440px) {
    .StackedListWrapper--sizeMedium .StackedListContent, .StackedListWrapper--sizeMedium .StackedListHeader {
        height: 16.4rem
    }
}

.StackedListWrapper--sizeLarge .StackedListContent, .StackedListWrapper--sizeLarge .StackedListHeader {
    height: 14.4rem
}

@media screen and (min-width: 1440px) {
    .StackedListWrapper--sizeLarge .StackedListContent, .StackedListWrapper--sizeLarge .StackedListHeader {
        height: 20.6rem
    }
}

.StackedListWrapper--hasScrollIndicator:after {
    content: "";
    position: absolute;
    display: block;
    background-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), opacity .24s cubic-bezier(.64, 0, .35, 1);
    right: 0;
    bottom: 0;
    left: 0;
    height: .6rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--hasScrollIndicator:after {
        height: .8rem
    }
}

.StackedListWrapper--hasScrollIndicator:hover:after {
    opacity: .1
}

.StackedList--hasScroll {
    height: 40.2rem;
    overflow-y: scroll
}

@media screen and (min-width: 1440px) {
    .StackedList--hasScroll {
        height: 55.4rem
    }
}

.StackedListWrapper--sizeMedium .StackedList--hasScroll {
    height: 28.8rem
}

@media screen and (min-width: 1440px) {
    .StackedListWrapper--sizeMedium .StackedList--hasScroll {
        height: 47.6rem
    }
}

.StackedListWrapper--sizeLarge .StackedList--hasScroll {
    height: 42rem
}

@media screen and (min-width: 1440px) {
    .StackedListWrapper--sizeLarge .StackedList--hasScroll {
        height: 60.2rem
    }
}

.StackedListWrapper--axisHorizontal {
    display: flex
}

.StackedListWrapper--axisHorizontal:after {
    content: "";
    position: absolute;
    display: block;
    background-color: currentColor;
    transition: color .12s cubic-bezier(.64, 0, .35, 1), opacity .24s cubic-bezier(.64, 0, .35, 1);
    top: 0;
    right: 0;
    bottom: 0;
    width: .6rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal:after {
        width: .8rem
    }
}

.StackedListWrapper--axisHorizontal:hover:after {
    opacity: .1
}

.StackedListWrapper--axisHorizontal .StackedListContent, .StackedListWrapper--axisHorizontal .StackedListHeader {
    height: 7.2rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedListContent, .StackedListWrapper--axisHorizontal .StackedListHeader {
        height: 8.6rem
    }
}

.StackedListWrapper--axisHorizontal .StackedListHeader {
    flex: 0 0 14.4rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedListHeader {
        flex-basis: 20.6rem
    }
}

.StackedListWrapper--axisHorizontal .StackedList {
    display: flex;
    flex: 1 1 auto;
    margin-top: 0;
    margin-left: -.6rem;
    overflow-x: scroll
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedList {
        margin-left: -.8rem
    }
}

.StackedListWrapper--axisHorizontal .StackedListItem {
    flex: 1 0 14.4rem;
    max-width: 28.8rem
}

.StackedListWrapper--axisHorizontal .StackedListItem:nth-child(1n+2) {
    margin-top: 0;
    margin-left: -.6rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedListItem:nth-child(1n+2) {
        margin-left: -.8rem
    }
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedListItem {
        flex-basis: 20.6rem;
        max-width: 41.2rem
    }
}

.StackedListWrapper--axisHorizontal .draggable--original:first-child + .StackedListItem {
    margin-left: 0
}

.StackedListWrapper--axisHorizontal .StackedListContent {
    flex-direction: column;
    justify-content: center;
    text-align: center
}

.StackedListWrapper--axisHorizontal .StackedListContent:before {
    top: -.6rem;
    right: auto;
    bottom: -.6rem;
    left: -.6rem;
    width: .6rem;
    height: auto
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal .StackedListContent:before {
        top: -.8rem;
        bottom: -.8rem;
        left: -.8rem;
        width: .8rem
    }
}

.StackedListWrapper--axisHorizontal .DragHandle, .StackedListWrapper--axisHorizontal .NopeHandle {
    margin-left: 0
}

.StackedListWrapper--axisHorizontal.StackedListWrapper--sizeMedium .StackedListContent, .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeMedium .StackedListHeader {
    height: 10rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeMedium .StackedListContent, .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeMedium .StackedListHeader {
        height: 16.4rem
    }
}

.StackedListWrapper--axisHorizontal.StackedListWrapper--sizeLarge .StackedListContent, .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeLarge .StackedListHeader {
    height: 14.4rem
}

@media screen and (min-width: 768px) {
    .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeLarge .StackedListContent, .StackedListWrapper--axisHorizontal.StackedListWrapper--sizeLarge .StackedListHeader {
        height: 20.6rem
    }
}

.StackedListItem--isDraggable {
    cursor: url(https://shopify.github.io/draggable/assets/img/cursor-drag.png), auto
}

.StackedListItem--isDraggable .StackedListContent {
    background-color: #fff
}

.StackedListItem--isDraggable:focus {
    outline: none
}

.StackedListItem--isDraggable:focus .StackedListContent, .StackedListItem--isDraggable:hover .StackedListContent {
    color: #0042ff
}

.StackedListItem--isDraggable:focus + .StackedListItem .StackedListContent:before, .StackedListItem--isDraggable:hover + .StackedListItem .StackedListContent:before {
    background-color: #0042ff;
    opacity: 1
}

.StackedListItem--isDraggable.draggable-source--is-dragging .StackedListContent {
    color: #0042ff
}

.StackedListItem--isDraggable.draggable-source--is-dragging .StackedListContent .Pattern--typeHalftone {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation-play-state: running;
    animation-play-state: running
}

.StackedListItem--isDraggable.draggable-source--is-dragging + .draggable--original + .StackedListItem .StackedListContent:before, .StackedListItem--isDraggable.draggable-source--is-dragging + .StackedListItem .StackedListContent:before {
    background-color: #0042ff;
    opacity: 1
}

.StackedListItem--isDraggable.draggable-source--placed .StackedListContent .Pattern--typePlaced {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    -webkit-animation: placed .24s cubic-bezier(.64, 0, .35, 1) both;
    animation: placed .24s cubic-bezier(.64, 0, .35, 1) both
}

.StackedListItem--isDraggable.draggable-mirror {
    z-index: 7;
    transition: width .24s cubic-bezier(.32, 1.46, .54, 1.28), height .24s cubic-bezier(.32, 1.46, .54, 1.28)
}

.StackedListItem--isDraggable.draggable-mirror .StackedListContent {
    height: 100%;
    color: #fff;
    background-color: #0042ff;
    border-color: #0042ff;
    -webkit-transform: scale(1.025);
    transform: scale(1.025)
}

.StackedListItem--isDraggable.draggable-mirror .StackedListContent:after, .StackedListItem--isDraggable.draggable-mirror .StackedListContent:before {
    display: none
}

.StackedListItem--isDraggable.draggable-mirror .DragHandle {
    background-color: #fff
}

.StackedListItem--isDraggable.draggable-mirror .DragHandle:after, .StackedListItem--isDraggable.draggable-mirror .DragHandle:before {
    background-color: #0042ff
}

.UniqueDropzone .BlockLayout .BlockWrapper .Block:nth-child(1n+3):not(.draggable-source--is-dragging) {
    min-height: 0;
    height: 0
}

.UniqueDropzone .BlockLayout--typeFlex .BlockWrapper {
    flex: 1 1 calc(50% - 0.8rem)
}

@media screen and (min-width: 480px) {
    .UniqueDropzone .BlockLayout--typeFlex .BlockWrapper {
        flex-basis: calc(25% - 0.8rem)
    }
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot, .UniqueDropzone .BlockLayout--typeGrid, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot {
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas: "a a b b" "a a d d" "c c d d" "e e f f" "e e g g" "h h h h";
    margin-top: .6rem;
    border: .6rem solid #212529;
    background-color: #212529
}

@media screen and (min-width: 768px) {
    .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot, .UniqueDropzone .BlockLayout--typeGrid, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot {
        grid-template-columns: 1fr 1.025fr 1.025fr 1fr;
        grid-template-areas: "a c c g" "a c c g" "a d f g" "b d f g" "b e f h" "b e f h";
        margin-top: .8rem;
        border-width: .8rem
    }
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone:before, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone:before, .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper--isDropzone:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone:before {
    content: "";
    position: absolute;
    top: -.6rem;
    right: -.6rem;
    bottom: -.6rem;
    left: -.6rem;
    display: block;
    pointer-events: none;
    background-color: #0042ff;
    opacity: 0;
    transition: opacity .12s cubic-bezier(.64, 0, .35, 1)
}

@media screen and (min-width: 768px) {
    .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone:before, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone:before, .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper--isDropzone:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone:before {
        top: -.8rem;
        right: -.8rem;
        bottom: -.8rem;
        left: -.8rem
    }
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone.draggable-dropzone--occupied:hover:before, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone.draggable-dropzone--occupied:hover:before, .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper--isDropzone.draggable-dropzone--occupied:hover:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper--isDropzone.draggable-dropzone--occupied:hover:before, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper--isDropzone.draggable-dropzone--occupied:hover:before {
    opacity: 1
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockContent, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockContent, .UniqueDropzone .BlockLayout--typeGrid .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockContent {
    border: 0
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:first-child, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:first-child, .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:first-child, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:first-child, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:first-child {
    grid-area: a
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(2), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(2), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(2), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(2), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(2) {
    grid-area: b
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(3), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(3), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(3), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(3), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(3) {
    grid-area: c
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(4), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(4), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(4), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(4), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(4) {
    grid-area: d
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(5), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(5), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(5), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(5), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(5) {
    grid-area: e
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(6), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(6), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(6), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(6), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(6) {
    grid-area: f
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(7), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(7), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(7), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(7), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(7) {
    grid-area: g
}

.Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(8), .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(8), .UniqueDropzone .BlockLayout--typeGrid .BlockWrapper:nth-child(8), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockWrapper:nth-child(8), .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockWrapper:nth-child(8) {
    grid-area: h
}

@media screen and (min-width: 768px) {
    .UniqueDropzone .BlockLayout--typeFlex .BlockContent {
        min-height: 13.6rem
    }
}

@media screen and (min-width: 1440px) {
    .UniqueDropzone .BlockLayout--typeFlex .BlockContent {
        min-height: 18.4rem
    }
}

@media screen and (min-width: 768px) {
    .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockContent, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockContent, .UniqueDropzone .BlockLayout--typeGrid .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockContent {
        min-height: 12.8rem
    }
}

@media screen and (min-width: 1440px) {
    .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--External .BlockContent, .Snappable .UniqueDropzone div > .BlockLayout--typeGrid--TimeSlot .BlockContent, .UniqueDropzone .BlockLayout--typeGrid .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--External .BlockContent, .UniqueDropzone .Snappable div > .BlockLayout--typeGrid--TimeSlot .BlockContent {
        min-height: 17.6rem
    }
}

.SimpleList {
    margin-left: auto;
    margin-right: auto;
    max-width: 62.5%
}

.MultipleContainers {
    display: grid;
    grid-gap: .8rem;
    grid-template-columns: 100%;
    grid-template-areas: "a" "b" "c"
}

@media screen and (min-width: 1440px) {
    .MultipleContainers {
        grid-template-columns: repeat(8, 1fr);
        grid-template-areas: "a a a b b b c c c"
    }
}

@media screen and (min-width: 1920px) {
    .MultipleContainers {
        margin-left: auto;
        margin-right: auto;
        max-width: 75%
    }
}

.MultipleContainers .Container:first-child {
    grid-area: a
}

.MultipleContainers .Container:nth-child(2) {
    grid-area: b
}

.MultipleContainers .Container:nth-child(3) {
    grid-area: c
}

@media screen and (min-width: 768px) and (max-width: 1439px) {
    .MultipleContainers .StackedListHeader {
        height: auto
    }
}

.draggable--is-dragging .MultipleContainers .draggable-container-parent--capacity {
    color: #0042ff
}

.Flexbox .Block.draggable--original ~ .Block:nth-child(2), .Flexbox .Block.draggable--original ~ .Block:nth-child(3), .Flexbox .Block.draggable--original ~ .Block:nth-child(5), .Flexbox .Block.draggable--original ~ .Block:nth-child(6), .Flexbox .Block:first-child, .Flexbox .Block:nth-child(2), .Flexbox .Block:nth-child(4), .Flexbox .Block:nth-child(5) {
    flex-basis: 50%
}

.Flexbox .Block.draggable--original ~ .Block:nth-child(4), .Flexbox .Block.draggable--original ~ .Block:nth-child(7), .Flexbox .Block.draggable--original ~ .Block:nth-child(8), .Flexbox .Block:nth-child(3), .Flexbox .Block:nth-child(6), .Flexbox .Block:nth-child(7) {
    flex-basis: 100%
}

.Flexbox .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Flexbox .Block:first-child .BlockContent, .Flexbox .Block:nth-child(2) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(5) .BlockContent, .Flexbox .Block:nth-child(7) .BlockContent {
    height: 8.8rem
}

.Flexbox .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Flexbox .Block:nth-child(3) .BlockContent, .Flexbox .Block:nth-child(6) .BlockContent {
    height: 13.6rem
}

@media screen and (min-width: 768px) {
    .Flexbox .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Flexbox .Block:first-child .BlockContent, .Flexbox .Block:nth-child(2) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(5) .BlockContent, .Flexbox .Block:nth-child(7) .BlockContent {
        height: 13.6rem
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Flexbox .Block:nth-child(3) .BlockContent, .Flexbox .Block:nth-child(6) .BlockContent {
        height: 18.4rem
    }
}

@media screen and (min-width: 1440px) {
    .Flexbox .Block.draggable--original ~ .Block:nth-child(2), .Flexbox .Block.draggable--original ~ .Block:nth-child(3), .Flexbox .Block.draggable--original ~ .Block:nth-child(4), .Flexbox .Block:first-child, .Flexbox .Block:nth-child(2), .Flexbox .Block:nth-child(3) {
        flex-basis: 33.333%
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(5), .Flexbox .Block:nth-child(4) {
        flex-basis: 25%
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(6), .Flexbox .Block:nth-child(5) {
        flex-basis: 75%
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(7), .Flexbox .Block.draggable--original ~ .Block:nth-child(8), .Flexbox .Block:nth-child(6), .Flexbox .Block:nth-child(7) {
        flex-basis: 50%
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Flexbox .Block:first-child .BlockContent, .Flexbox .Block:nth-child(2) .BlockContent, .Flexbox .Block:nth-child(3) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(6) .BlockContent, .Flexbox .Block:nth-child(7) .BlockContent {
        height: 18.4rem
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(5) .BlockContent {
        height: 23.2rem
    }
}

@media screen and (min-width: 1920px) {
    .Flexbox .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Flexbox .Block:first-child .BlockContent, .Flexbox .Block:nth-child(2) .BlockContent, .Flexbox .Block:nth-child(3) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(6) .BlockContent, .Flexbox .Block:nth-child(7) .BlockContent {
        height: 23.2rem
    }

    .Flexbox .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Flexbox .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Flexbox .Block:nth-child(4) .BlockContent, .Flexbox .Block:nth-child(5) .BlockContent {
        height: 28rem
    }
}

@media screen and (max-width: 767px) {
    .Floated .Block.draggable--original ~ .Block:nth-child(2), .Floated .Block.draggable--original ~ .Block:nth-child(3), .Floated .Block.draggable--original ~ .Block:nth-child(4), .Floated .Block.draggable--original ~ .Block:nth-child(5), .Floated .Block.draggable--original ~ .Block:nth-child(6), .Floated .Block.draggable--original ~ .Block:nth-child(8), .Floated .Block.draggable--original ~ .Block:nth-child(9), .Floated .Block:first-child, .Floated .Block:nth-child(2), .Floated .Block:nth-child(3), .Floated .Block:nth-child(4), .Floated .Block:nth-child(5), .Floated .Block:nth-child(7), .Floated .Block:nth-child(8) {
        width: 50%
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(7), .Floated .Block:nth-child(6) {
        width: 100%
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Floated .Block:nth-child(3) .BlockContent {
        height: 17.8rem
    }

    .Floated .draggable--original ~ .Block:nth-child(3) .BlockContent {
        height: 8.6rem
    }
}

@media screen and (min-width: 768px) {
    .Floated .Block.draggable--original ~ .Block:nth-child(2), .Floated .Block.draggable--original ~ .Block:nth-child(3), .Floated .Block.draggable--original ~ .Block:nth-child(4), .Floated .Block:first-child, .Floated .Block:nth-child(2), .Floated .Block:nth-child(3) {
        width: 33.333%
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(5), .Floated .Block.draggable--original ~ .Block:nth-child(6), .Floated .Block.draggable--original ~ .Block:nth-child(7), .Floated .Block.draggable--original ~ .Block:nth-child(8), .Floated .Block.draggable--original ~ .Block:nth-child(9), .Floated .Block:nth-child(4), .Floated .Block:nth-child(5), .Floated .Block:nth-child(6), .Floated .Block:nth-child(7), .Floated .Block:nth-child(8) {
        width: 50%
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(9) .BlockContent, .Floated .Block:first-child .BlockContent, .Floated .Block:nth-child(2) .BlockContent, .Floated .Block:nth-child(3) .BlockContent, .Floated .Block:nth-child(7) .BlockContent, .Floated .Block:nth-child(8) .BlockContent {
        height: 13.6rem
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Floated .Block:nth-child(4) .BlockContent {
        height: 28rem
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Floated .Block:nth-child(5) .BlockContent, .Floated .Block:nth-child(6) .BlockContent {
        height: 13.6rem
    }
}

@media screen and (min-width: 1440px) {
    .Floated .Block.draggable--original ~ .Block:nth-child(2) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(3) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(4) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(9) .BlockContent, .Floated .Block:first-child .BlockContent, .Floated .Block:nth-child(2) .BlockContent, .Floated .Block:nth-child(3) .BlockContent, .Floated .Block:nth-child(7) .BlockContent, .Floated .Block:nth-child(8) .BlockContent {
        height: 18.4rem
    }
}

@media screen and (min-width: 1920px) {
    .Floated .Block.draggable--original ~ .Block:nth-child(5) .BlockContent, .Floated .Block:nth-child(4) .BlockContent {
        height: 37.6rem
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(6) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(7) .BlockContent, .Floated .Block:nth-child(5) .BlockContent, .Floated .Block:nth-child(6) .BlockContent {
        height: 18.4rem
    }

    .Floated .Block.draggable--original ~ .Block:nth-child(8) .BlockContent, .Floated .Block.draggable--original ~ .Block:nth-child(9) .BlockContent, .Floated .Block:nth-child(7) .BlockContent, .Floated .Block:nth-child(8) .BlockContent {
        height: 23.2rem
    }
}

.GridLayout .BlockLayout--typeGrid, .GridLayout .Snappable div > .BlockLayout--typeGrid--External, .GridLayout .Snappable div > .BlockLayout--typeGrid--TimeSlot, .Snappable .GridLayout div > .BlockLayout--typeGrid--External, .Snappable .GridLayout div > .BlockLayout--typeGrid--TimeSlot {
    grid-template-rows: repeat(5, 1fr);
    grid-template-columns: repeat(5, 1fr);
    grid-template-areas: "a a a a a" "b b c c c" "d d c c c" "d d e e e" "f f f g g"
}

@media screen and (min-width: 768px) {
    .GridLayout .BlockLayout--typeGrid, .GridLayout .Snappable div > .BlockLayout--typeGrid--External, .GridLayout .Snappable div > .BlockLayout--typeGrid--TimeSlot, .Snappable .GridLayout div > .BlockLayout--typeGrid--External, .Snappable .GridLayout div > .BlockLayout--typeGrid--TimeSlot {
        grid-template-rows: repeat(6, 13.6rem);
        grid-template-columns: repeat(8, 1fr);
        grid-template-areas: "a a a a b b b b" "a a a a d d d d" "c c c c d d d d" "e e e e e e e e" "f f f g g g g g" "f f f g g g g g"
    }
}

@media screen and (min-width: 1440px) {
    .GridLayout .BlockLayout--typeGrid, .GridLayout .Snappable div > .BlockLayout--typeGrid--External, .GridLayout .Snappable div > .BlockLayout--typeGrid--TimeSlot, .Snappable .GridLayout div > .BlockLayout--typeGrid--External, .Snappable .GridLayout div > .BlockLayout--typeGrid--TimeSlot {
        grid-template-rows: repeat(6, 18.4rem)
    }
}

.GridLayout .BlockWrapper:first-child {
    grid-area: a
}

.GridLayout .BlockWrapper:nth-child(2) {
    grid-area: b
}

.GridLayout .BlockWrapper:nth-child(3) {
    grid-area: c
}

.GridLayout .BlockWrapper:nth-child(4) {
    grid-area: d
}

.GridLayout .BlockWrapper:nth-child(5) {
    grid-area: e
}

.GridLayout .BlockWrapper:nth-child(6) {
    grid-area: f
}

.GridLayout .BlockWrapper:nth-child(7) {
    grid-area: g
}

.Collidable .BlockLayout--typePositioned {
    width: 100%;
    height: 60rem
}

@media screen and (min-width: 768px) {
    .Collidable .BlockLayout--typePositioned {
        height: 64rem
    }
}

@media screen and (min-width: 1440px) {
    .Collidable .BlockLayout--typePositioned {
        height: 80rem
    }
}

.Collidable .Block--item2, .Collidable .Block--item3, .Collidable .BlockWrapper:first-child, .Collidable .BlockWrapper:nth-child(4) {
    position: absolute;
    width: calc(50% - 1.5rem)
}

@media screen and (min-width: 768px) {
    .Collidable .Block--item2, .Collidable .Block--item3, .Collidable .BlockWrapper:first-child, .Collidable .BlockWrapper:nth-child(4) {
        width: calc(25% - .8rem)
    }
}

.Collidable .Block--item2, .Collidable .Block--item3 {
    height: 20rem
}

@media screen and (min-width: 768px) {
    .Collidable .Block--item2, .Collidable .Block--item3 {
        height: 41.6rem
    }
}

@media screen and (min-width: 1440px) {
    .Collidable .Block--item2, .Collidable .Block--item3 {
        height: 52.8rem
    }
}

.Collidable .Block--item2 {
    top: 1.2rem;
    right: 1.2rem
}

@media screen and (min-width: 768px) {
    .Collidable .Block--item2 {
        top: 1.6rem;
        right: auto;
        left: calc(25% + 1.6rem)
    }
}

.Collidable .Block--item3 {
    bottom: 1.2rem;
    left: 1.2rem
}

@media screen and (min-width: 768px) {
    .Collidable .Block--item3 {
        bottom: 1.6rem;
        right: 1.6rem;
        left: auto
    }
}

.Collidable .BlockWrapper:first-child, .Collidable .BlockWrapper:nth-child(4) {
    height: 13.2rem
}

@media screen and (min-width: 768px) {
    .Collidable .BlockWrapper:first-child, .Collidable .BlockWrapper:nth-child(4) {
        height: 18.4rem
    }
}

@media screen and (min-width: 1440px) {
    .Collidable .BlockWrapper:first-child, .Collidable .BlockWrapper:nth-child(4) {
        height: 23.2rem
    }
}

.Collidable .BlockWrapper:first-child {
    top: 1.2rem;
    left: 1.2rem
}

@media screen and (min-width: 768px) {
    .Collidable .BlockWrapper:first-child {
        top: 1.6rem;
        left: 1.6rem
    }
}

.Collidable .BlockWrapper:nth-child(4) {
    bottom: 1.2rem;
    right: 1.2rem
}

@media screen and (min-width: 768px) {
    .Collidable .BlockWrapper:nth-child(4) {
        top: 1.6rem;
        right: 1.6rem;
        bottom: auto
    }
}

.Collidable .CollidableWall {
    position: absolute;
    background-color: #212529;
    transition: background-color .24s cubic-bezier(.64, 0, .35, 1)
}

.Collidable .CollidableWall--itemTop {
    top: 0;
    right: 0;
    left: 0;
    height: .6rem
}

@media screen and (min-width: 768px) {
    .Collidable .CollidableWall--itemTop {
        height: .8rem
    }
}

.Collidable .CollidableWall--itemRight {
    top: 0;
    right: 0;
    bottom: 0;
    width: .6rem
}

@media screen and (min-width: 768px) {
    .Collidable .CollidableWall--itemRight {
        width: .8rem
    }
}

.Collidable .CollidableWall--itemBottom {
    right: 0;
    bottom: 0;
    left: 0;
    height: .6rem
}

@media screen and (min-width: 768px) {
    .Collidable .CollidableWall--itemBottom {
        height: .8rem
    }
}

.Collidable .CollidableWall--itemLeft {
    top: 0;
    bottom: 0;
    left: 0;
    width: .6rem
}

@media screen and (min-width: 768px) {
    .Collidable .CollidableWall--itemLeft {
        width: .8rem
    }
}

.Collidable .draggable-mirror .BlockContent {
    -webkit-transform: scale(.9);
    transform: scale(.9)
}

.Collidable .draggable-container--is-dragging:not(.draggable-container--over) .Block--typeStripes .BlockContent {
    color: red
}

.Collidable .CollidableWall.isColliding, .Collidable .draggable-container--is-dragging:not(.draggable-container--over) .CollidableWall {
    background-color: red
}

.Snappable {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    -webkit-column-gap: 40px;
    column-gap: 40px
}

.Snappable div > .BlockLayout--typeGrid, .Snappable div > .BlockLayout--typeGrid--External, .Snappable div > .BlockLayout--typeGrid--TimeSlot {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(8, 13.6rem)
}

@media screen and (min-width: 768px) {
    .Snappable div > .BlockLayout--typeGrid, .Snappable div > .BlockLayout--typeGrid--External, .Snappable div > .BlockLayout--typeGrid--TimeSlot {
        grid-template-columns: repeat(3, .5fr)
    }
}

.Snappable div > .BlockLayout--typeGrid--External, .Snappable div > .BlockLayout--typeGrid--TimeSlot {
    grid-template-columns: repeat(1, 1fr)
}

.Snappable div > .BlockLayout--typeGrid--TimeSlot div {
    border-bottom: 1px solid #000;
    border-top: none;
    border-left: none;
    border-right: none
}

.SwapAnimation .Block.draggable--original ~ .Block:nth-child(2), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(3), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(5), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(6), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(8), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(9), .SwapAnimation .Block:first-child, .SwapAnimation .Block:nth-child(2), .SwapAnimation .Block:nth-child(4), .SwapAnimation .Block:nth-child(5), .SwapAnimation .Block:nth-child(7), .SwapAnimation .Block:nth-child(8) {
    flex-basis: 50%
}

.SwapAnimation .Block.draggable--original ~ .Block:nth-child(4), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(7), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(10), .SwapAnimation .Block:nth-child(3), .SwapAnimation .Block:nth-child(6), .SwapAnimation .Block:nth-child(9) {
    flex-basis: 100%
}

@media screen and (min-width: 768px) {
    .SwapAnimation .Block.draggable--original ~ .Block:nth-child(2), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(3), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(4), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(5), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(6), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(7), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(8), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(9), .SwapAnimation .Block.draggable--original ~ .Block:nth-child(10), .SwapAnimation .Block:first-child, .SwapAnimation .Block:nth-child(2), .SwapAnimation .Block:nth-child(3), .SwapAnimation .Block:nth-child(4), .SwapAnimation .Block:nth-child(5), .SwapAnimation .Block:nth-child(6), .SwapAnimation .Block:nth-child(7), .SwapAnimation .Block:nth-child(8), .SwapAnimation .Block:nth-child(9) {
        flex-basis: 33.333%
    }
}

@media screen and (min-width: 768px) {
    .SwapAnimation .BlockContent {
        height: 13.6rem
    }
}

@media screen and (min-width: 1440px) {
    .SwapAnimation .BlockContent {
        height: 18.4rem
    }
}

@media screen and (min-width: 1920px) {
    .SwapAnimation .BlockContent {
        height: 23.2rem
    }
}

/*# sourceMappingURL=examples-app.css.map */
